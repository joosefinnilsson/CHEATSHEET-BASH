# validate xml in a shell script.
xmlproc_parse.python-xml &>/dev/null <FILE> || exit 1

# encode/decode HTML entities
xml2asc < inputfile > outputfile

# Terrorist threat level text
xmlstarlet sel net -t -o "Terrorist threat level: " -v //@CONDITION http://is.gd/wacQtQ

# Insert an element into xml
xmlstarlet ed -s "/breakfast_menu/food" -t elem -n 'foo' -v "bar" simple.xml

# Adding formatting to an xml document for easier reading
xmllint format <filename> > <output file>

# Extract a IRC like chat log out of an Adium xml logfile
xmlstarlet sel -N x="http://purl.org/net/ulf/ns/0.4-02" -T -t -m "//x:message" -v "concat(substring(@time,12,5),' &lt; ',@sender,'&gt;', ' ',.)" -n

# Remove comments in XML file
xmlstarlet ed -d '//comment()' $XML_FILE

# extract element of xml
xml2 < file.xml | grep ^/path/to/element | cut -f2- -d=

# Prettify an XML file
xmllint format xmlout nsclean <file>

# Obtain last stock quote from google API with xmlstarlet
xmlstarlet sel net -t -m "//last" -v "@data" -n http://www.google.com/ig/api?stock=GOOG

# Replace the content of an XML element
xmlstarlet ed -u '//food[calories="650"]/calories' -v "999" simple.xml

# extract element of xml
xmlstarlet sel -t -v "/path/to/element" file.xml

# validate xml in a shell script using xmllint
xmllint noout some.xml 2>&1 >/dev/null || exit 1

# Highlight the plain text in XML (or HTML, SGML, etc)
xmlpager() { xmlindent "$@" | awk '{gsub(">",">'`tput setf 4`'"); gsub("<","'`tput sgr0`'<"); print;} END {print "'`tput sgr0`'"}' | less -r; }

# Extract herds & maintainers' email from a Gentoo metadata.xml file
xmlstarlet sel -t -m '/pkgmetadata/herd' -v . -n -t -m '/pkgmetadata/maintainer' -v email metadata.xml

# fomat/encode/escape xml
xml fo -e utf-8 file.xml | xml esc

# extract element of xml
xmlstarlet sel -t -c "/path/to/element" file.xml

# Geo Weather
xmlstarlet fo "http://www.google.com/ig/api?weather=$(curl -s api.hostip.info/get_html.php?ip=$(curl -s icanhazip.com)... SEE SAMPLE OUTPUT

# Insert an element into xml
xmlstarlet ed -s "/breakfast_menu/food" -t elem -n 'foo' -v "bar" simple.xml

# Adding formatting to an xml document for easier reading
xmllint format <filename> > <output file>

# Extract a IRC like chat log out of an Adium xml logfile
xmlstarlet sel -N x="http://purl.org/net/ulf/ns/0.4-02" -T -t -m "//x:message" -v "concat(substring(@time,12,5),' &lt; ',@sender,'&gt;', ' ',.)" -n

# Remove comments in XML file
xmlstarlet ed -d '//comment()' $XML_FILE

# extract element of xml
xml2 < file.xml | grep ^/path/to/element | cut -f2- -d=

# Prettify an XML file
xmllint format xmlout nsclean <file>

# Obtain last stock quote from google API with xmlstarlet
xmlstarlet sel net -t -m "//last" -v "@data" -n http://www.google.com/ig/api?stock=GOOG

# Replace the content of an XML element
xmlstarlet ed -u '//food[calories="650"]/calories' -v "999" simple.xml

# extract element of xml
xmlstarlet sel -t -v "/path/to/element" file.xml

# validate xml in a shell script using xmllint
xmllint noout some.xml 2>&1 >/dev/null || exit 1

# Highlight the plain text in XML (or HTML, SGML, etc)
xmlpager() { xmlindent "$@" | awk '{gsub(">",">'`tput setf 4`'"); gsub("<","'`tput sgr0`'<"); print;} END {print "'`tput sgr0`'"}' | less -r; }

# Extract herds & maintainers' email from a Gentoo metadata.xml file
xmlstarlet sel -t -m '/pkgmetadata/herd' -v . -n -t -m '/pkgmetadata/maintainer' -v email metadata.xml

# extract element of xml
xmlstarlet sel -t -c "/path/to/element" file.xml
